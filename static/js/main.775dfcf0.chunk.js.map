{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","addMovie","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","hasTitleError","setTitleError","hasDescriptionError","setDescriptionError","hasImgUrlError","setImgUrlError","hasImdbUrlError","setImdbUrlError","hasImdbIdError","setImdbIdError","hasValidImgUrl","setValidImgUrl","hasValidImdbUrl","setValidImdbUrl","validUrlRegExp","onSubmit","event","preventDefault","every","item","length","test","classNames","type","placeholder","value","onChange","target","titleChange","descriptionChange","imgUrlChange","validImgUrl","imdbUrlChange","validImdbUrl","imdbIdChange","App","state","moviesFromServer","setState","prev","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.775dfcf0.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { FormEvent, useState } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasDescriptionError, setDescriptionError] = useState(false);\n  const [hasImgUrlError, setImgUrlError] = useState(false);\n  const [hasImdbUrlError, setImdbUrlError] = useState(false);\n  const [hasImdbIdError, setImdbIdError] = useState(false);\n  const [hasValidImgUrl, setValidImgUrl] = useState(true);\n  const [hasValidImdbUrl, setValidImdbUrl] = useState(true);\n\n  // eslint-disable-next-line max-len\n  const validUrlRegExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  const validImgUrl = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (imgUrl && !validUrlRegExp.test(event.target.value)) {\n      setValidImgUrl(false);\n    } else {\n      setValidImgUrl(true);\n    }\n  };\n\n  const validImdbUrl = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (imdbUrl && !validUrlRegExp.test(event.target.value)) {\n      setValidImdbUrl(false);\n    } else {\n      setValidImdbUrl(true);\n    }\n  };\n\n  const titleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const descriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDescription(event.target.value);\n    setDescriptionError(false);\n  };\n\n  const imgUrlChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setImgUrl(event.target.value);\n    setImgUrlError(false);\n  };\n\n  const imdbUrlChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setImdbUrl(event.target.value);\n    setImdbUrlError(false);\n  };\n\n  const imdbIdChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setImdbId(event.target.value);\n    setImdbIdError(false);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const submitForm = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setTitleError(!title);\n\n    setDescriptionError(!description);\n\n    setImgUrlError(!imgUrl);\n\n    setImdbUrlError(!imdbUrl);\n\n    setImdbIdError(!imdbId);\n\n    const noErrors = [\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    ];\n\n    if (!noErrors.every(item => item.length > 0)\n        || (!validUrlRegExp.test(imgUrl) && !validUrlRegExp.test(imdbUrl))) {\n      return;\n    }\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    addMovie(movie);\n\n    resetForm();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      onSubmit={submitForm}\n    >\n      <div className=\"form__container\">\n        <input\n          className={classNames('form__item', {\n            'form__item--warning': hasTitleError,\n          })}\n          type=\"text\"\n          data-cy=\"form-title\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={event => {\n            titleChange(event);\n          }}\n        />\n        {hasTitleError && (\n          <span className=\"warning\">\n            Please enter the title\n          </span>\n        )}\n      </div>\n\n      <div className=\"form__container\">\n        <input\n          className={classNames('form__item', {\n            'form__item--warning': hasDescriptionError,\n          })}\n          type=\"text\"\n          data-cy=\"form-description\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={event => {\n            descriptionChange(event);\n          }}\n        />\n        {hasDescriptionError && (\n          <span className=\"warning\">\n            Please enter the description\n          </span>\n        )}\n      </div>\n\n      <div className=\"form__container\">\n        <input\n          className={classNames('form__item', {\n            'form__item--warning': hasImgUrlError || !hasValidImgUrl,\n          })}\n          type=\"text\"\n          data-cy=\"form-imgUrl\"\n          placeholder=\"imgUrl\"\n          value={imgUrl}\n          onChange={event => {\n            imgUrlChange(event); validImgUrl(event);\n          }}\n        />\n        {hasImgUrlError && (\n          <span className=\"warning\">\n            Please enter the imgUrl\n          </span>\n        )}\n\n        {!hasValidImgUrl && (\n          <span className=\"warning\">\n            Please enter correct url\n          </span>\n        )}\n      </div>\n\n      <div className=\"form__container\">\n        <input\n          className={classNames('form__item', {\n            'form__item--warning': hasImdbUrlError || !hasValidImdbUrl,\n          })}\n          type=\"text\"\n          data-cy=\"form-imdbUrl\"\n          placeholder=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={event => {\n            imdbUrlChange(event); validImdbUrl(event);\n          }}\n        />\n        {hasImdbUrlError && (\n          <span className=\"warning\">\n            Please enter the imdbUrl\n          </span>\n        )}\n        {!hasValidImdbUrl && (\n          <span className=\"warning\">\n            Please enter correct url\n          </span>\n        )}\n      </div>\n\n      <div className=\"form__container\">\n        <input\n          className={classNames('form__item', {\n            'form__item--warning': hasImdbIdError,\n          })}\n          type=\"text\"\n          data-cy=\"form-imdbId\"\n          placeholder=\"imdbId\"\n          value={imdbId}\n          onChange={event => {\n            imdbIdChange(event);\n          }}\n        />\n        {hasImdbIdError && (\n          <span className=\"warning\">\n            Please enter the imdbId\n          </span>\n        )}\n      </div>\n\n      <button\n        className=\"form__button\"\n        type=\"submit\"\n      >\n        Add movie\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((prev) => ({\n      movies: [...prev.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}