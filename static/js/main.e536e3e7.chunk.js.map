{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","addMovie","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","hasTitleError","setTitleError","hasImgUrlError","setImgUrlError","hasImdbUrlError","setImdbUrlError","hasImdbIdError","setImdbIdError","imgUrlValidationError","setImgUrlValidationError","ImdbUrlValidationError","setImdbUrlValidationError","validUrlRegExp","validUrl","url","length","test","blurErrorHandler","event","target","name","value","inputHandler","disableAdd","onSubmit","preventDefault","classNames","type","placeholder","onBlur","onChange","disabled","App","state","moviesFromServer","setState","prev","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e536e3e7.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { FormEvent, useState } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasImgUrlError, setImgUrlError] = useState(false);\n  const [hasImdbUrlError, setImdbUrlError] = useState(false);\n  const [hasImdbIdError, setImdbIdError] = useState(false);\n  const [imgUrlValidationError, setImgUrlValidationError] = useState(false);\n  const [ImdbUrlValidationError, setImdbUrlValidationError] = useState(false);\n\n  // eslint-disable-next-line max-len\n  const validUrlRegExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  const validUrl = (url: string) => {\n    if (url.length > 0) {\n      return !validUrlRegExp.test(url);\n    }\n\n    return false;\n  };\n\n  const blurErrorHandler = (event:React.FocusEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'title':\n        if (!value) {\n          setTitleError(true);\n        }\n\n        break;\n\n      case 'imgUrl':\n        if (!value) {\n          setImgUrlError(true);\n        }\n\n        setImgUrlValidationError(() => validUrl(value));\n        break;\n\n      case 'imdbUrl':\n        if (!value) {\n          setImdbUrlError(true);\n        }\n\n        setImdbUrlValidationError(() => validUrl(value));\n        break;\n\n      case 'imdbId':\n        if (!value) {\n          setImdbIdError(true);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'title':\n        setTitle(value);\n        setTitleError(false);\n\n        break;\n\n      case 'description':\n        setDescription(event.target.value);\n        break;\n\n      case 'imgUrl':\n        setImgUrl(event.target.value);\n        setImgUrlError(false);\n\n        break;\n\n      case 'imdbUrl':\n        setImdbUrl(event.target.value);\n        setImdbUrlError(false);\n        break;\n\n      case 'imdbId':\n        setImdbId(event.target.value);\n        setImdbIdError(false);\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const fieldsCheck = () => {\n    setTitleError(!title);\n\n    setImgUrlError(!imgUrl);\n\n    setImdbUrlError(!imdbUrl);\n\n    setImdbIdError(!imdbId);\n  };\n\n  const disableAdd = (\n    !title\n    || !imgUrl\n    || !imdbUrl\n    || !imdbId\n    || imgUrlValidationError\n    || ImdbUrlValidationError\n  );\n\n  const submitForm = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    fieldsCheck();\n\n    const movie = {\n      title,\n      description: description || 'N/A',\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    if (disableAdd) {\n      return;\n    }\n\n    addMovie(movie);\n\n    resetForm();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      onSubmit={submitForm}\n    >\n      <div className=\"form__container\">\n        <input\n          className={classNames('form__item', {\n            'form__item--warning': hasTitleError,\n          })}\n          name=\"title\"\n          type=\"text\"\n          data-cy=\"form-title\"\n          placeholder=\"Title\"\n          onBlur={blurErrorHandler}\n          value={title}\n          onChange={inputHandler}\n        />\n        {hasTitleError && (\n          <span className=\"warning\">\n            Please enter the title\n          </span>\n        )}\n      </div>\n\n      <div className=\"form__container\">\n        <input\n          className=\"form__item\"\n          name=\"description\"\n          type=\"text\"\n          data-cy=\"form-description\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={inputHandler}\n        />\n      </div>\n\n      <div className=\"form__container\">\n        <input\n          className={classNames('form__item', {\n            'form__item--warning': hasImgUrlError || imgUrlValidationError,\n          })}\n          name=\"imgUrl\"\n          type=\"text\"\n          data-cy=\"form-imgUrl\"\n          placeholder=\"imgUrl\"\n          value={imgUrl}\n          onBlur={blurErrorHandler}\n          onChange={inputHandler}\n        />\n        {hasImgUrlError && (\n          <span className=\"warning\">\n            Please enter the imgUrl\n          </span>\n        )}\n\n        {imgUrlValidationError && (\n          <span className=\"warning\">\n            Please enter correct url\n          </span>\n        )}\n      </div>\n\n      <div className=\"form__container\">\n        <input\n          className={classNames('form__item', {\n            'form__item--warning': hasImdbUrlError || ImdbUrlValidationError,\n          })}\n          type=\"text\"\n          name=\"imdbUrl\"\n          data-cy=\"form-imdbUrl\"\n          placeholder=\"imdbUrl\"\n          value={imdbUrl}\n          onBlur={blurErrorHandler}\n          onChange={inputHandler}\n        />\n        {hasImdbUrlError && (\n          <span className=\"warning\">\n            Please enter the imdbUrl\n          </span>\n        )}\n        {ImdbUrlValidationError && (\n          <span className=\"warning\">\n            Please enter correct url\n          </span>\n        )}\n      </div>\n\n      <div className=\"form__container\">\n        <input\n          className={classNames('form__item', {\n            'form__item--warning': hasImdbIdError,\n          })}\n          name=\"imdbId\"\n          type=\"text\"\n          data-cy=\"form-imdbId\"\n          placeholder=\"imdbId\"\n          value={imdbId}\n          onBlur={blurErrorHandler}\n          onChange={inputHandler}\n        />\n        {hasImdbIdError && (\n          <span className=\"warning\">\n            Please enter the imdbId\n          </span>\n        )}\n      </div>\n\n      <button\n        className=\"form__button\"\n        type=\"submit\"\n        disabled={disableAdd}\n      >\n        Add movie\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((prev) => ({\n      movies: [...prev.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}